{"name": "test_remove_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <img src=\"https://salondecorum.mysalon2me.com/image/cache/catalog/products/davinesnounoushampoo845floz-278x355.jpg\" alt=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" title=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" class=\"img-responsive\"> is not clickable at point (467, 638). Other element would receive the click: <div class=\"adpopup-overlay adpopup-style-overlay-dark\" style=\"opacity: 0.7; display: block;\"></div>\n  (Session info: chrome=106.0.5249.61)\nStacktrace:\n#0 0x556db1fd4693 <unknown>\n#1 0x556db1dcdb0a <unknown>\n#2 0x556db1e0df52 <unknown>\n#3 0x556db1e0b9a0 <unknown>\n#4 0x556db1e08f74 <unknown>\n#5 0x556db1e07c97 <unknown>\n#6 0x556db1dfb551 <unknown>\n#7 0x556db1e23922 <unknown>\n#8 0x556db1dfad53 <unknown>\n#9 0x556db1e23a8e <unknown>\n#10 0x556db1e374b0 <unknown>\n#11 0x556db1e23743 <unknown>\n#12 0x556db1df9533 <unknown>\n#13 0x556db1dfa715 <unknown>\n#14 0x556db20247bd <unknown>\n#15 0x556db2027bf9 <unknown>\n#16 0x556db2009f2e <unknown>\n#17 0x556db20289b3 <unknown>\n#18 0x556db1ffde4f <unknown>\n#19 0x556db2047ea8 <unknown>\n#20 0x556db2048052 <unknown>\n#21 0x556db206271f <unknown>\n#22 0x7f4e982902a2 <unknown>", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3f0a304ab13fe36e53da22be919bd34f\")>\n\n    @allure.feature(\"Cart Page\")\n    @allure.story(\"Cart actions\")\n    def test_remove_product(driver):\n        \"\"\"A dummy docstring.\"\"\"\n        with allure.step('Open page'):\n            cart_page = CartPage(driver)\n            cart_page.open()\n        driver.implicitly_wait(10)\n        with allure.step('Add product'):\n>           cart_page.first_product.click()\n\ntest_5_cart_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:88: in click\n    self._execute(Command.CLICK_ELEMENT)\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:396: in _execute\n    return self._parent.execute(command, params)\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff33061b730>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x556db2048052 \\\\u003Cunknown>\\\\n#21 0x556db206271f \\\\u003Cunknown>\\\\n#22 0x7f4e982902a2 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <img src=\"https://salondecorum.mysalon2me.com/image/cache/catalog/products/davinesnounoushampoo845floz-278x355.jpg\" alt=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" title=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" class=\"img-responsive\"> is not clickable at point (467, 638). Other element would receive the click: <div class=\"adpopup-overlay adpopup-style-overlay-dark\" style=\"opacity: 0.7; display: block;\"></div>\nE         (Session info: chrome=106.0.5249.61)\nE       Stacktrace:\nE       #0 0x556db1fd4693 <unknown>\nE       #1 0x556db1dcdb0a <unknown>\nE       #2 0x556db1e0df52 <unknown>\nE       #3 0x556db1e0b9a0 <unknown>\nE       #4 0x556db1e08f74 <unknown>\nE       #5 0x556db1e07c97 <unknown>\nE       #6 0x556db1dfb551 <unknown>\nE       #7 0x556db1e23922 <unknown>\nE       #8 0x556db1dfad53 <unknown>\nE       #9 0x556db1e23a8e <unknown>\nE       #10 0x556db1e374b0 <unknown>\nE       #11 0x556db1e23743 <unknown>\nE       #12 0x556db1df9533 <unknown>\nE       #13 0x556db1dfa715 <unknown>\nE       #14 0x556db20247bd <unknown>\nE       #15 0x556db2027bf9 <unknown>\nE       #16 0x556db2009f2e <unknown>\nE       #17 0x556db20289b3 <unknown>\nE       #18 0x556db1ffde4f <unknown>\nE       #19 0x556db2047ea8 <unknown>\nE       #20 0x556db2048052 <unknown>\nE       #21 0x556db206271f <unknown>\nE       #22 0x7f4e982902a2 <unknown>\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: ElementClickInterceptedException"}, "description": "A dummy docstring.", "steps": [{"name": "Open page", "status": "passed", "start": 1664588763918, "stop": 1664588764761}, {"name": "Add product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <img src=\"https://salondecorum.mysalon2me.com/image/cache/catalog/products/davinesnounoushampoo845floz-278x355.jpg\" alt=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" title=\"Davines Essential Haircare Nounou Shampoo 8.45oz\" class=\"img-responsive\"> is not clickable at point (467, 638). Other element would receive the click: <div class=\"adpopup-overlay adpopup-style-overlay-dark\" style=\"opacity: 0.7; display: block;\"></div>\n  (Session info: chrome=106.0.5249.61)\nStacktrace:\n#0 0x556db1fd4693 <unknown>\n#1 0x556db1dcdb0a <unknown>\n#2 0x556db1e0df52 <unknown>\n#3 0x556db1e0b9a0 <unknown>\n#4 0x556db1e08f74 <unknown>\n#5 0x556db1e07c97 <unknown>\n#6 0x556db1dfb551 <unknown>\n#7 0x556db1e23922 <unknown>\n#8 0x556db1dfad53 <unknown>\n#9 0x556db1e23a8e <unknown>\n#10 0x556db1e374b0 <unknown>\n#11 0x556db1e23743 <unknown>\n#12 0x556db1df9533 <unknown>\n#13 0x556db1dfa715 <unknown>\n#14 0x556db20247bd <unknown>\n#15 0x556db2027bf9 <unknown>\n#16 0x556db2009f2e <unknown>\n#17 0x556db20289b3 <unknown>\n#18 0x556db1ffde4f <unknown>\n#19 0x556db2047ea8 <unknown>\n#20 0x556db2048052 <unknown>\n#21 0x556db206271f <unknown>\n#22 0x7f4e982902a2 <unknown>\n\n", "trace": "  File \"/home/varia/Desktop/projects/autotests_website/tests/test_5_cart_page.py\", line 30, in test_remove_product\n    cart_page.first_product.click()\n  File \"/home/varia/Desktop/projects/autotests_website/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 88, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/varia/Desktop/projects/autotests_website/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 396, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/varia/Desktop/projects/autotests_website/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 428, in execute\n    self.error_handler.check_response(response)\n  File \"/home/varia/Desktop/projects/autotests_website/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1664588764763, "stop": 1664588765864}], "start": 1664588763918, "stop": 1664588765864, "uuid": "ba67f367-0f55-4110-a276-281e72ed0af5", "historyId": "61448d884dcb3e38d669212923c42552", "testCaseId": "a77ab57b7689f6f00acf45506fa8c005", "fullName": "test_5_cart_page#test_remove_product", "labels": [{"name": "feature", "value": "Cart Page"}, {"name": "story", "value": "Cart actions"}, {"name": "suite", "value": "test_5_cart_page"}, {"name": "host", "value": "varia"}, {"name": "thread", "value": "3244573-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_5_cart_page"}]}